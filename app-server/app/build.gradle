plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    // Spring
    id 'org.springframework.boot' version '2.3.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'

    // Asciidoctor
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    asciidoctorExtensions
}

ext {
    snippetsDir = file('build/generated-snippets')
}

dependencies {
    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'

    // Spring Web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.16'
    annotationProcessor 'org.projectlombok:lombok:1.18.16'

    // Spring Boot Test
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    // AssertJ
    testImplementation 'org.assertj:assertj-core:3.18.1'

    // Spring Data JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // H2
    runtimeOnly 'com.h2database:h2'

    // MariaDB
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:2.7.2'

    // Spring REST Docs
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    // Asciidoctor
    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
}

application {
    // Define the main class for the application.
    mainClass = 'com.codesoom.myseat.App'
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    configurations 'asciidoctorExtensions'
    inputs.dir snippetsDir
    dependsOn test
}

bootJar {
    dependsOn asciidoctor
    copy {
        from "${asciidoctor.outputDir}"
        into 'src/main/resources/static/docs'
    }
}
